// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// FieldAttributesValidatorsFormat field attributes validators format
// swagger:model fieldAttributesValidatorsFormat
type FieldAttributesValidatorsFormat struct {

	// custom pattern
	CustomPattern *string `json:"customPattern,omitempty"`

	// predefined pattern
	PredefinedPattern *string `json:"predefinedPattern,omitempty"`
}

// Validate validates this field attributes validators format
func (m *FieldAttributesValidatorsFormat) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePredefinedPattern(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var fieldAttributesValidatorsFormatTypePredefinedPatternPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["url","email"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		fieldAttributesValidatorsFormatTypePredefinedPatternPropEnum = append(fieldAttributesValidatorsFormatTypePredefinedPatternPropEnum, v)
	}
}

const (

	// FieldAttributesValidatorsFormatPredefinedPatternURL captures enum value "url"
	FieldAttributesValidatorsFormatPredefinedPatternURL string = "url"

	// FieldAttributesValidatorsFormatPredefinedPatternEmail captures enum value "email"
	FieldAttributesValidatorsFormatPredefinedPatternEmail string = "email"
)

// prop value enum
func (m *FieldAttributesValidatorsFormat) validatePredefinedPatternEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, fieldAttributesValidatorsFormatTypePredefinedPatternPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *FieldAttributesValidatorsFormat) validatePredefinedPattern(formats strfmt.Registry) error {

	if swag.IsZero(m.PredefinedPattern) { // not required
		return nil
	}

	// value enum
	if err := m.validatePredefinedPatternEnum("predefinedPattern", "body", *m.PredefinedPattern); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *FieldAttributesValidatorsFormat) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FieldAttributesValidatorsFormat) UnmarshalBinary(b []byte) error {
	var res FieldAttributesValidatorsFormat
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
