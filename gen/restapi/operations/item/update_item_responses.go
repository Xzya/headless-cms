// Code generated by go-swagger; DO NOT EDIT.

package item

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/Xzya/headless-cms/gen/models"
)

// UpdateItemOKCode is the HTTP code returned for type UpdateItemOK
const UpdateItemOKCode int = 200

/*UpdateItemOK The item details

swagger:response updateItemOK
*/
type UpdateItemOK struct {

	/*
	  In: Body
	*/
	Payload *models.ItemResponse `json:"body,omitempty"`
}

// NewUpdateItemOK creates UpdateItemOK with default headers values
func NewUpdateItemOK() *UpdateItemOK {

	return &UpdateItemOK{}
}

// WithPayload adds the payload to the update item o k response
func (o *UpdateItemOK) WithPayload(payload *models.ItemResponse) *UpdateItemOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update item o k response
func (o *UpdateItemOK) SetPayload(payload *models.ItemResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateItemOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*UpdateItemDefault unexpected error

swagger:response updateItemDefault
*/
type UpdateItemDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateItemDefault creates UpdateItemDefault with default headers values
func NewUpdateItemDefault(code int) *UpdateItemDefault {
	if code <= 0 {
		code = 500
	}

	return &UpdateItemDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the update item default response
func (o *UpdateItemDefault) WithStatusCode(code int) *UpdateItemDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the update item default response
func (o *UpdateItemDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the update item default response
func (o *UpdateItemDefault) WithPayload(payload *models.Error) *UpdateItemDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update item default response
func (o *UpdateItemDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateItemDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
