// Code generated by go-swagger; DO NOT EDIT.

package item

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// UpdateItemHandlerFunc turns a function with the right signature into a update item handler
type UpdateItemHandlerFunc func(UpdateItemParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdateItemHandlerFunc) Handle(params UpdateItemParams) middleware.Responder {
	return fn(params)
}

// UpdateItemHandler interface for that can handle valid update item params
type UpdateItemHandler interface {
	Handle(UpdateItemParams) middleware.Responder
}

// NewUpdateItem creates a new http.Handler for the update item operation
func NewUpdateItem(ctx *middleware.Context, handler UpdateItemHandler) *UpdateItem {
	return &UpdateItem{Context: ctx, Handler: handler}
}

/*UpdateItem swagger:route PUT /projects/{projectId}/items/{id} item updateItem

Update a item

*/
type UpdateItem struct {
	Context *middleware.Context
	Handler UpdateItemHandler
}

func (o *UpdateItem) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewUpdateItemParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
