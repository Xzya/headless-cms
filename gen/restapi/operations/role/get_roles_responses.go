// Code generated by go-swagger; DO NOT EDIT.

package role

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/Xzya/headless-cms/gen/models"
)

// GetRolesOKCode is the HTTP code returned for type GetRolesOK
const GetRolesOKCode int = 200

/*GetRolesOK Created

swagger:response getRolesOK
*/
type GetRolesOK struct {

	/*
	  In: Body
	*/
	Payload *models.RolesResponse `json:"body,omitempty"`
}

// NewGetRolesOK creates GetRolesOK with default headers values
func NewGetRolesOK() *GetRolesOK {

	return &GetRolesOK{}
}

// WithPayload adds the payload to the get roles o k response
func (o *GetRolesOK) WithPayload(payload *models.RolesResponse) *GetRolesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get roles o k response
func (o *GetRolesOK) SetPayload(payload *models.RolesResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRolesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetRolesDefault unexpected error

swagger:response getRolesDefault
*/
type GetRolesDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetRolesDefault creates GetRolesDefault with default headers values
func NewGetRolesDefault(code int) *GetRolesDefault {
	if code <= 0 {
		code = 500
	}

	return &GetRolesDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get roles default response
func (o *GetRolesDefault) WithStatusCode(code int) *GetRolesDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get roles default response
func (o *GetRolesDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get roles default response
func (o *GetRolesDefault) WithPayload(payload *models.Error) *GetRolesDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get roles default response
func (o *GetRolesDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRolesDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
