// Code generated by go-swagger; DO NOT EDIT.

package field

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/Xzya/headless-cms/gen/models"
)

// UpdateFieldOKCode is the HTTP code returned for type UpdateFieldOK
const UpdateFieldOKCode int = 200

/*UpdateFieldOK The field details

swagger:response updateFieldOK
*/
type UpdateFieldOK struct {

	/*
	  In: Body
	*/
	Payload *models.FieldResponse `json:"body,omitempty"`
}

// NewUpdateFieldOK creates UpdateFieldOK with default headers values
func NewUpdateFieldOK() *UpdateFieldOK {

	return &UpdateFieldOK{}
}

// WithPayload adds the payload to the update field o k response
func (o *UpdateFieldOK) WithPayload(payload *models.FieldResponse) *UpdateFieldOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update field o k response
func (o *UpdateFieldOK) SetPayload(payload *models.FieldResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateFieldOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*UpdateFieldDefault unexpected error

swagger:response updateFieldDefault
*/
type UpdateFieldDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateFieldDefault creates UpdateFieldDefault with default headers values
func NewUpdateFieldDefault(code int) *UpdateFieldDefault {
	if code <= 0 {
		code = 500
	}

	return &UpdateFieldDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the update field default response
func (o *UpdateFieldDefault) WithStatusCode(code int) *UpdateFieldDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the update field default response
func (o *UpdateFieldDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the update field default response
func (o *UpdateFieldDefault) WithPayload(payload *models.Error) *UpdateFieldDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update field default response
func (o *UpdateFieldDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateFieldDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
