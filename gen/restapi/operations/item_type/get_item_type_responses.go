// Code generated by go-swagger; DO NOT EDIT.

package item_type

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/Xzya/headless-cms/gen/models"
)

// GetItemTypeOKCode is the HTTP code returned for type GetItemTypeOK
const GetItemTypeOKCode int = 200

/*GetItemTypeOK The model details

swagger:response getItemTypeOK
*/
type GetItemTypeOK struct {

	/*
	  In: Body
	*/
	Payload *models.ItemTypeResponse `json:"body,omitempty"`
}

// NewGetItemTypeOK creates GetItemTypeOK with default headers values
func NewGetItemTypeOK() *GetItemTypeOK {

	return &GetItemTypeOK{}
}

// WithPayload adds the payload to the get item type o k response
func (o *GetItemTypeOK) WithPayload(payload *models.ItemTypeResponse) *GetItemTypeOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get item type o k response
func (o *GetItemTypeOK) SetPayload(payload *models.ItemTypeResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetItemTypeOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetItemTypeDefault unexpected error

swagger:response getItemTypeDefault
*/
type GetItemTypeDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetItemTypeDefault creates GetItemTypeDefault with default headers values
func NewGetItemTypeDefault(code int) *GetItemTypeDefault {
	if code <= 0 {
		code = 500
	}

	return &GetItemTypeDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get item type default response
func (o *GetItemTypeDefault) WithStatusCode(code int) *GetItemTypeDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get item type default response
func (o *GetItemTypeDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get item type default response
func (o *GetItemTypeDefault) WithPayload(payload *models.Error) *GetItemTypeDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get item type default response
func (o *GetItemTypeDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetItemTypeDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
