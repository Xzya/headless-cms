// Code generated by go-swagger; DO NOT EDIT.

package item_type

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/Xzya/headless-cms/gen/models"
)

// DuplicateItemTypeOKCode is the HTTP code returned for type DuplicateItemTypeOK
const DuplicateItemTypeOKCode int = 200

/*DuplicateItemTypeOK The model details

swagger:response duplicateItemTypeOK
*/
type DuplicateItemTypeOK struct {

	/*
	  In: Body
	*/
	Payload *models.ItemTypeResponse `json:"body,omitempty"`
}

// NewDuplicateItemTypeOK creates DuplicateItemTypeOK with default headers values
func NewDuplicateItemTypeOK() *DuplicateItemTypeOK {

	return &DuplicateItemTypeOK{}
}

// WithPayload adds the payload to the duplicate item type o k response
func (o *DuplicateItemTypeOK) WithPayload(payload *models.ItemTypeResponse) *DuplicateItemTypeOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the duplicate item type o k response
func (o *DuplicateItemTypeOK) SetPayload(payload *models.ItemTypeResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DuplicateItemTypeOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*DuplicateItemTypeDefault unexpected error

swagger:response duplicateItemTypeDefault
*/
type DuplicateItemTypeDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDuplicateItemTypeDefault creates DuplicateItemTypeDefault with default headers values
func NewDuplicateItemTypeDefault(code int) *DuplicateItemTypeDefault {
	if code <= 0 {
		code = 500
	}

	return &DuplicateItemTypeDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the duplicate item type default response
func (o *DuplicateItemTypeDefault) WithStatusCode(code int) *DuplicateItemTypeDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the duplicate item type default response
func (o *DuplicateItemTypeDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the duplicate item type default response
func (o *DuplicateItemTypeDefault) WithPayload(payload *models.Error) *DuplicateItemTypeDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the duplicate item type default response
func (o *DuplicateItemTypeDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DuplicateItemTypeDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
