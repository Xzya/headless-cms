// Code generated by go-swagger; DO NOT EDIT.

package account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/Xzya/headless-cms/gen/models"
)

// SigninOKCode is the HTTP code returned for type SigninOK
const SigninOKCode int = 200

/*SigninOK Created

swagger:response signinOK
*/
type SigninOK struct {

	/*
	  In: Body
	*/
	Payload *models.SigninOKBody `json:"body,omitempty"`
}

// NewSigninOK creates SigninOK with default headers values
func NewSigninOK() *SigninOK {

	return &SigninOK{}
}

// WithPayload adds the payload to the signin o k response
func (o *SigninOK) WithPayload(payload *models.SigninOKBody) *SigninOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the signin o k response
func (o *SigninOK) SetPayload(payload *models.SigninOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SigninOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*SigninDefault unexpected error

swagger:response signinDefault
*/
type SigninDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSigninDefault creates SigninDefault with default headers values
func NewSigninDefault(code int) *SigninDefault {
	if code <= 0 {
		code = 500
	}

	return &SigninDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the signin default response
func (o *SigninDefault) WithStatusCode(code int) *SigninDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the signin default response
func (o *SigninDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the signin default response
func (o *SigninDefault) WithPayload(payload *models.Error) *SigninDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the signin default response
func (o *SigninDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SigninDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
