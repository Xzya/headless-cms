// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Headless CMS",
    "version": "1.0.0"
  },
  "host": "127.0.0.1:8080",
  "basePath": "/api",
  "paths": {
    "/projects": {
      "get": {
        "tags": [
          "project"
        ],
        "summary": "Get the projects for the user",
        "operationId": "getProjects",
        "responses": {
          "200": {
            "description": "The project list",
            "schema": {
              "$ref": "#/definitions/ProjectsResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "project"
        ],
        "summary": "Create a project",
        "operationId": "createProject",
        "parameters": [
          {
            "description": "The project details",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ProjectResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/projects/{id}": {
      "get": {
        "tags": [
          "project"
        ],
        "summary": "Get a project",
        "operationId": "getProject",
        "responses": {
          "200": {
            "description": "The project details",
            "schema": {
              "$ref": "#/definitions/ProjectResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "project"
        ],
        "summary": "Update a project",
        "operationId": "updateProject",
        "parameters": [
          {
            "description": "The project details",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ProjectRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The project details",
            "schema": {
              "$ref": "#/definitions/ProjectResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "project"
        ],
        "summary": "Delete a project",
        "operationId": "deleteProject",
        "responses": {
          "200": {
            "description": "The project details",
            "schema": {
              "$ref": "#/definitions/ProjectResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "x-nullable": false,
          "description": "The project id",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/projects/{projectId}/fields": {
      "get": {
        "tags": [
          "field"
        ],
        "summary": "Get all the fields of the project",
        "operationId": "getProjectFields",
        "responses": {
          "200": {
            "description": "Fields response",
            "schema": {
              "$ref": "#/definitions/FieldsResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "x-nullable": false,
          "description": "The project id",
          "name": "projectId",
          "in": "path",
          "required": true
        },
        {
          "type": "array",
          "items": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "x-nullable": false,
          "description": "IDs to include in the response",
          "name": "ids",
          "in": "query"
        },
        {
          "type": "integer",
          "format": "int32",
          "x-nullable": false,
          "description": "ID of a related resource to include in the response. The resource must be specified in the target parameter",
          "name": "id",
          "in": "query"
        },
        {
          "enum": [
            "itemTypeId"
          ],
          "type": "string",
          "x-nullable": false,
          "description": "Target resource of the query. Must include the id of the resource as well.",
          "name": "target",
          "in": "query"
        }
      ]
    },
    "/projects/{projectId}/fields/{id}": {
      "get": {
        "tags": [
          "field"
        ],
        "summary": "Get a field",
        "operationId": "getField",
        "responses": {
          "200": {
            "description": "The field details",
            "schema": {
              "$ref": "#/definitions/FieldResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "field"
        ],
        "summary": "Update a field",
        "operationId": "updateField",
        "parameters": [
          {
            "description": "The field details",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/FieldRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The field details",
            "schema": {
              "$ref": "#/definitions/FieldResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "field"
        ],
        "summary": "Delete a field",
        "operationId": "deleteField",
        "responses": {
          "200": {
            "description": "The field details",
            "schema": {
              "$ref": "#/definitions/FieldResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "x-nullable": false,
          "description": "The project id",
          "name": "projectId",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "x-nullable": false,
          "description": "The field id",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/projects/{projectId}/item-types": {
      "get": {
        "tags": [
          "item-type"
        ],
        "summary": "Get the item types for the project",
        "operationId": "getItemTypes",
        "responses": {
          "200": {
            "description": "The item type list",
            "schema": {
              "$ref": "#/definitions/ItemTypesResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "item-type"
        ],
        "summary": "Create a model",
        "operationId": "createItemType",
        "parameters": [
          {
            "description": "The model details",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ItemTypeRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ItemTypeResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "x-nullable": false,
          "description": "The project id",
          "name": "projectId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/projects/{projectId}/item-types/{id}": {
      "get": {
        "tags": [
          "item-type"
        ],
        "summary": "Get a model",
        "operationId": "getItemType",
        "responses": {
          "200": {
            "description": "The model details",
            "schema": {
              "$ref": "#/definitions/ItemTypeResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "item-type"
        ],
        "summary": "Update a model",
        "operationId": "updateItemType",
        "parameters": [
          {
            "description": "The model details",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ItemTypeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The model details",
            "schema": {
              "$ref": "#/definitions/ItemTypeResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "item-type"
        ],
        "summary": "Delete a model",
        "operationId": "deleteItemType",
        "responses": {
          "200": {
            "description": "The model details",
            "schema": {
              "$ref": "#/definitions/ItemTypeResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "x-nullable": false,
          "description": "The project id",
          "name": "projectId",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "x-nullable": false,
          "description": "The model id",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/projects/{projectId}/item-types/{id}/duplicate": {
      "post": {
        "tags": [
          "item-type"
        ],
        "summary": "Duplicate a model",
        "operationId": "duplicateItemType",
        "responses": {
          "200": {
            "description": "The model details",
            "schema": {
              "$ref": "#/definitions/ItemTypeResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "x-nullable": false,
          "description": "The project id",
          "name": "projectId",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "x-nullable": false,
          "description": "The model id",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/projects/{projectId}/item-types/{itemTypeId}/fields": {
      "get": {
        "tags": [
          "field"
        ],
        "summary": "Get the fields of the model",
        "operationId": "getFields",
        "responses": {
          "200": {
            "description": "Fields response",
            "schema": {
              "$ref": "#/definitions/FieldsResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "field"
        ],
        "summary": "Create a new field",
        "operationId": "createField",
        "parameters": [
          {
            "description": "The field details",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FieldRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/FieldResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "x-nullable": false,
          "description": "The project id",
          "name": "projectId",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "x-nullable": false,
          "description": "The item type id",
          "name": "itemTypeId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/projects/{projectId}/items": {
      "get": {
        "tags": [
          "item"
        ],
        "summary": "Get the items of the model",
        "operationId": "getItems",
        "parameters": [
          {
            "type": "array",
            "items": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            },
            "description": "IDs to include in the response",
            "name": "ids",
            "in": "query"
          },
          {
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "description": "The item-type id of the items",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The filter query",
            "name": "query",
            "in": "query"
          },
          {
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "description": "The page offset",
            "name": "offset",
            "in": "query"
          },
          {
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "description": "The limit count",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ItemsResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "item"
        ],
        "summary": "Create a new item",
        "operationId": "createItem",
        "parameters": [
          {
            "description": "The item details",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ItemRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ItemResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "x-nullable": false,
          "description": "The project id",
          "name": "projectId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/projects/{projectId}/items/{id}": {
      "get": {
        "tags": [
          "item"
        ],
        "summary": "Get a item",
        "operationId": "getItem",
        "responses": {
          "200": {
            "description": "The item details",
            "schema": {
              "$ref": "#/definitions/ItemResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "item"
        ],
        "summary": "Update a item",
        "operationId": "updateItem",
        "parameters": [
          {
            "description": "The item details",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ItemRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The item details",
            "schema": {
              "$ref": "#/definitions/ItemResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "item"
        ],
        "summary": "Delete a item",
        "operationId": "deleteItem",
        "responses": {
          "200": {
            "description": "The item details",
            "schema": {
              "$ref": "#/definitions/ItemResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "x-nullable": false,
          "description": "The project id",
          "name": "projectId",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "x-nullable": false,
          "description": "The item id",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/projects/{projectId}/roles": {
      "get": {
        "tags": [
          "role"
        ],
        "summary": "Get the roles of the model",
        "operationId": "getRoles",
        "responses": {
          "200": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/RolesResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "role"
        ],
        "summary": "Create a new role",
        "operationId": "createRole",
        "parameters": [
          {
            "description": "The role details",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RoleRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/RoleResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "x-nullable": false,
          "description": "The project id",
          "name": "projectId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/projects/{projectId}/roles/{id}": {
      "get": {
        "tags": [
          "role"
        ],
        "summary": "Get a role",
        "operationId": "getRole",
        "responses": {
          "200": {
            "description": "The role details",
            "schema": {
              "$ref": "#/definitions/RoleResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "role"
        ],
        "summary": "Update a role",
        "operationId": "updateRole",
        "parameters": [
          {
            "description": "The role details",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/RoleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The role details",
            "schema": {
              "$ref": "#/definitions/RoleResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "role"
        ],
        "summary": "Delete a role",
        "operationId": "deleteRole",
        "responses": {
          "200": {
            "description": "The role details",
            "schema": {
              "$ref": "#/definitions/RoleResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "x-nullable": false,
          "description": "The project id",
          "name": "projectId",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "x-nullable": false,
          "description": "The role id",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/projects/{projectId}/users": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get the users of the model",
        "operationId": "getUsers",
        "responses": {
          "200": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/UsersResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create a new user",
        "operationId": "createUser",
        "parameters": [
          {
            "description": "The user details",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "x-nullable": false,
          "description": "The project id",
          "name": "projectId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/projects/{projectId}/users/{id}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get a user",
        "operationId": "getUser",
        "responses": {
          "200": {
            "description": "The user details",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Update a user",
        "operationId": "updateUser",
        "parameters": [
          {
            "description": "The user details",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The user details",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete a user",
        "operationId": "deleteUser",
        "responses": {
          "200": {
            "description": "The user details",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "x-nullable": false,
          "description": "The project id",
          "name": "projectId",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "x-nullable": false,
          "description": "The user id",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/signin": {
      "post": {
        "tags": [
          "account"
        ],
        "operationId": "signin",
        "parameters": [
          {
            "description": "The account details",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "$ref": "#/definitions/EmailCredentials"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created",
            "schema": {
              "properties": {
                "data": {
                  "$ref": "#/definitions/Session"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/signup": {
      "post": {
        "tags": [
          "account"
        ],
        "operationId": "signup",
        "parameters": [
          {
            "description": "The account details",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "$ref": "#/definitions/EmailCredentials"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "properties": {
                "data": {
                  "$ref": "#/definitions/Session"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "EmailCredentials": {
      "type": "object",
      "required": [
        "type",
        "attributes"
      ],
      "properties": {
        "attributes": {
          "type": "object",
          "required": [
            "email",
            "password"
          ],
          "properties": {
            "email": {
              "type": "string",
              "format": "email",
              "x-nullable": false
            },
            "password": {
              "type": "string",
              "format": "password",
              "maxLength": 32,
              "minLength": 8,
              "x-nullable": false
            }
          },
          "x-nullable": false
        },
        "type": {
          "type": "string",
          "enum": [
            "email_credentials"
          ],
          "x-nullable": false
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "error"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "x-nullable": false
        },
        "error": {
          "type": "string",
          "x-nullable": false
        }
      }
    },
    "Field": {
      "type": "object",
      "required": [
        "type",
        "attributes"
      ],
      "properties": {
        "attributes": {
          "type": "object",
          "required": [
            "label",
            "apiKey",
            "fieldType",
            "appearance",
            "validators"
          ],
          "properties": {
            "apiKey": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "x-nullable": false
            },
            "appearance": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "title",
                    "plain",
                    "markdown"
                  ],
                  "x-nullable": false
                }
              },
              "x-nullable": false
            },
            "fieldType": {
              "type": "string",
              "enum": [
                "string"
              ],
              "x-nullable": false
            },
            "hint": {
              "type": "string",
              "x-nullable": false
            },
            "label": {
              "type": "string",
              "x-nullable": false
            },
            "localized": {
              "type": "boolean",
              "x-nullable": false
            },
            "position": {
              "type": "integer",
              "format": "int32",
              "x-nullable": false
            },
            "validators": {
              "type": "object",
              "properties": {
                "enum": {
                  "type": "object",
                  "required": [
                    "values"
                  ],
                  "properties": {
                    "values": {
                      "type": "array",
                      "minItems": 1,
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "format": {
                  "type": "object",
                  "properties": {
                    "customPattern": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "predefinedPattern": {
                      "type": "string",
                      "enum": [
                        "url",
                        "email"
                      ],
                      "x-nullable": true
                    }
                  }
                },
                "length": {
                  "type": "object",
                  "properties": {
                    "eq": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "max": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "min": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                },
                "required": {
                  "type": "object"
                },
                "unique": {
                  "type": "object"
                }
              },
              "x-nullable": false
            }
          }
        },
        "id": {
          "type": "string",
          "x-nullable": false,
          "readOnly": true
        },
        "relationships": {
          "$ref": "#/definitions/FieldRelationships"
        },
        "type": {
          "type": "string",
          "enum": [
            "field"
          ],
          "x-nullable": false
        }
      }
    },
    "FieldRelationships": {
      "type": "object",
      "properties": {
        "itemType": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/Relationship"
            }
          }
        }
      }
    },
    "FieldRequest": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/Field"
        }
      }
    },
    "FieldResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Field"
        }
      }
    },
    "FieldsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Field"
          }
        }
      }
    },
    "Item": {
      "type": "object",
      "required": [
        "type",
        "attributes",
        "relationships"
      ],
      "properties": {
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "x-nullable": false
        },
        "id": {
          "type": "string",
          "x-nullable": false,
          "readOnly": true
        },
        "relationships": {
          "$ref": "#/definitions/ItemRelationships"
        },
        "type": {
          "type": "string",
          "enum": [
            "item"
          ],
          "x-nullable": false
        }
      }
    },
    "ItemRelationships": {
      "type": "object",
      "required": [
        "itemType"
      ],
      "properties": {
        "itemType": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/definitions/Relationship"
            }
          }
        },
        "lastEditor": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/Relationship"
            }
          }
        }
      }
    },
    "ItemRequest": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/Item"
        }
      }
    },
    "ItemResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Item"
        }
      }
    },
    "ItemType": {
      "type": "object",
      "required": [
        "type",
        "attributes"
      ],
      "properties": {
        "attributes": {
          "type": "object",
          "required": [
            "apiKey"
          ],
          "properties": {
            "apiKey": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "x-nullable": false
            },
            "name": {
              "type": "string",
              "x-nullable": false
            }
          }
        },
        "id": {
          "type": "string",
          "x-nullable": false,
          "readOnly": true
        },
        "relationships": {
          "$ref": "#/definitions/ItemTypeRelationships"
        },
        "type": {
          "type": "string",
          "enum": [
            "item_type"
          ],
          "x-nullable": false
        }
      }
    },
    "ItemTypeIncluded": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Field"
      }
    },
    "ItemTypeRelationships": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Relationship"
              }
            }
          }
        },
        "orderingField": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/Relationship"
            }
          }
        },
        "singletonItem": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/Relationship"
            }
          }
        }
      }
    },
    "ItemTypeRequest": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/ItemType"
        }
      }
    },
    "ItemTypeResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/ItemType"
        },
        "included": {
          "$ref": "#/definitions/ItemTypeIncluded"
        }
      }
    },
    "ItemTypesResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ItemType"
          }
        }
      }
    },
    "ItemsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Item"
          }
        },
        "meta": {
          "$ref": "#/definitions/ItemsResponseMeta"
        }
      }
    },
    "ItemsResponseMeta": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Project": {
      "type": "object",
      "required": [
        "type",
        "attributes"
      ],
      "properties": {
        "attributes": {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string",
              "x-nullable": false
            }
          }
        },
        "id": {
          "type": "string",
          "x-nullable": false,
          "readOnly": true
        },
        "relationships": {
          "$ref": "#/definitions/ProjectRelationships"
        },
        "type": {
          "type": "string",
          "enum": [
            "project"
          ],
          "x-nullable": false
        }
      }
    },
    "ProjectRelationships": {
      "type": "object",
      "properties": {
        "account": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/Relationship"
            }
          }
        }
      }
    },
    "ProjectRequest": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/Project"
        }
      }
    },
    "ProjectResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Project"
        }
      }
    },
    "ProjectsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Project"
          }
        }
      }
    },
    "Relationship": {
      "type": "object",
      "required": [
        "id",
        "type"
      ],
      "properties": {
        "id": {
          "type": "string",
          "x-nullable": false
        },
        "type": {
          "type": "string",
          "enum": [
            "account",
            "project",
            "role",
            "session",
            "item_type",
            "field",
            "item"
          ],
          "x-nullable": false
        }
      }
    },
    "Role": {
      "type": "object",
      "required": [
        "type",
        "attributes"
      ],
      "properties": {
        "attributes": {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "canEditProject": {
              "type": "boolean",
              "x-nullable": false
            },
            "canEditSchema": {
              "type": "boolean",
              "x-nullable": false
            },
            "canManageAccessTokens": {
              "type": "boolean",
              "x-nullable": false
            },
            "canManageUsers": {
              "type": "boolean",
              "x-nullable": false
            },
            "canPublishContent": {
              "type": "boolean",
              "x-nullable": false
            },
            "name": {
              "type": "string",
              "x-nullable": false
            }
          },
          "x-nullable": false
        },
        "id": {
          "type": "string",
          "x-nullable": false,
          "readOnly": true
        },
        "type": {
          "type": "string",
          "enum": [
            "role"
          ],
          "x-nullable": false
        }
      }
    },
    "RoleRequest": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/Role"
        }
      }
    },
    "RoleResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Role"
        }
      }
    },
    "RolesResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Role"
          }
        }
      }
    },
    "Session": {
      "type": "object",
      "required": [
        "id",
        "type",
        "relationships"
      ],
      "properties": {
        "id": {
          "type": "string",
          "x-nullable": false
        },
        "relationships": {
          "$ref": "#/definitions/SessionRelationships"
        },
        "type": {
          "type": "string",
          "enum": [
            "session"
          ],
          "x-nullable": false
        }
      }
    },
    "SessionRelationships": {
      "type": "object",
      "properties": {
        "user": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/Relationship"
            }
          }
        }
      }
    },
    "User": {
      "type": "object",
      "required": [
        "type",
        "attributes",
        "relationships"
      ],
      "properties": {
        "attributes": {
          "type": "object",
          "required": [
            "email"
          ],
          "properties": {
            "email": {
              "type": "string",
              "format": "email",
              "x-nullable": false
            },
            "state": {
              "type": "string",
              "enum": [
                "registered",
                "invitation_pending"
              ]
            }
          }
        },
        "id": {
          "type": "string",
          "x-nullable": false,
          "readOnly": true
        },
        "relationships": {
          "$ref": "#/definitions/UserRelationships"
        },
        "type": {
          "type": "string",
          "enum": [
            "user"
          ],
          "x-nullable": false
        }
      }
    },
    "UserRelationships": {
      "type": "object",
      "required": [
        "role"
      ],
      "properties": {
        "role": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/definitions/Relationship"
            }
          }
        }
      }
    },
    "UserRequest": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/User"
        }
      }
    },
    "UserResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/User"
        }
      }
    },
    "UsersResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User"
          }
        }
      }
    }
  },
  "tags": [
    {
      "description": "Operations about account",
      "name": "account"
    },
    {
      "description": "Operations about user roles",
      "name": "role"
    },
    {
      "description": "Operations about users",
      "name": "user"
    },
    {
      "description": "Operations about projects",
      "name": "project"
    },
    {
      "description": "Operations about item types",
      "name": "item-type"
    },
    {
      "description": "Operations about item-type fields",
      "name": "field"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Headless CMS",
    "version": "1.0.0"
  },
  "host": "127.0.0.1:8080",
  "basePath": "/api",
  "paths": {
    "/projects": {
      "get": {
        "tags": [
          "project"
        ],
        "summary": "Get the projects for the user",
        "operationId": "getProjects",
        "responses": {
          "200": {
            "description": "The project list",
            "schema": {
              "$ref": "#/definitions/ProjectsResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "project"
        ],
        "summary": "Create a project",
        "operationId": "createProject",
        "parameters": [
          {
            "description": "The project details",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ProjectResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/projects/{id}": {
      "get": {
        "tags": [
          "project"
        ],
        "summary": "Get a project",
        "operationId": "getProject",
        "responses": {
          "200": {
            "description": "The project details",
            "schema": {
              "$ref": "#/definitions/ProjectResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "project"
        ],
        "summary": "Update a project",
        "operationId": "updateProject",
        "parameters": [
          {
            "description": "The project details",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ProjectRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The project details",
            "schema": {
              "$ref": "#/definitions/ProjectResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "project"
        ],
        "summary": "Delete a project",
        "operationId": "deleteProject",
        "responses": {
          "200": {
            "description": "The project details",
            "schema": {
              "$ref": "#/definitions/ProjectResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "x-nullable": false,
          "description": "The project id",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/projects/{projectId}/fields": {
      "get": {
        "tags": [
          "field"
        ],
        "summary": "Get all the fields of the project",
        "operationId": "getProjectFields",
        "responses": {
          "200": {
            "description": "Fields response",
            "schema": {
              "$ref": "#/definitions/FieldsResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "x-nullable": false,
          "description": "The project id",
          "name": "projectId",
          "in": "path",
          "required": true
        },
        {
          "type": "array",
          "items": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "x-nullable": false,
          "description": "IDs to include in the response",
          "name": "ids",
          "in": "query"
        },
        {
          "type": "integer",
          "format": "int32",
          "x-nullable": false,
          "description": "ID of a related resource to include in the response. The resource must be specified in the target parameter",
          "name": "id",
          "in": "query"
        },
        {
          "enum": [
            "itemTypeId"
          ],
          "type": "string",
          "x-nullable": false,
          "description": "Target resource of the query. Must include the id of the resource as well.",
          "name": "target",
          "in": "query"
        }
      ]
    },
    "/projects/{projectId}/fields/{id}": {
      "get": {
        "tags": [
          "field"
        ],
        "summary": "Get a field",
        "operationId": "getField",
        "responses": {
          "200": {
            "description": "The field details",
            "schema": {
              "$ref": "#/definitions/FieldResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "field"
        ],
        "summary": "Update a field",
        "operationId": "updateField",
        "parameters": [
          {
            "description": "The field details",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/FieldRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The field details",
            "schema": {
              "$ref": "#/definitions/FieldResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "field"
        ],
        "summary": "Delete a field",
        "operationId": "deleteField",
        "responses": {
          "200": {
            "description": "The field details",
            "schema": {
              "$ref": "#/definitions/FieldResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "x-nullable": false,
          "description": "The project id",
          "name": "projectId",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "x-nullable": false,
          "description": "The field id",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/projects/{projectId}/item-types": {
      "get": {
        "tags": [
          "item-type"
        ],
        "summary": "Get the item types for the project",
        "operationId": "getItemTypes",
        "responses": {
          "200": {
            "description": "The item type list",
            "schema": {
              "$ref": "#/definitions/ItemTypesResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "item-type"
        ],
        "summary": "Create a model",
        "operationId": "createItemType",
        "parameters": [
          {
            "description": "The model details",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ItemTypeRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ItemTypeResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "x-nullable": false,
          "description": "The project id",
          "name": "projectId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/projects/{projectId}/item-types/{id}": {
      "get": {
        "tags": [
          "item-type"
        ],
        "summary": "Get a model",
        "operationId": "getItemType",
        "responses": {
          "200": {
            "description": "The model details",
            "schema": {
              "$ref": "#/definitions/ItemTypeResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "item-type"
        ],
        "summary": "Update a model",
        "operationId": "updateItemType",
        "parameters": [
          {
            "description": "The model details",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ItemTypeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The model details",
            "schema": {
              "$ref": "#/definitions/ItemTypeResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "item-type"
        ],
        "summary": "Delete a model",
        "operationId": "deleteItemType",
        "responses": {
          "200": {
            "description": "The model details",
            "schema": {
              "$ref": "#/definitions/ItemTypeResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "x-nullable": false,
          "description": "The project id",
          "name": "projectId",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "x-nullable": false,
          "description": "The model id",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/projects/{projectId}/item-types/{id}/duplicate": {
      "post": {
        "tags": [
          "item-type"
        ],
        "summary": "Duplicate a model",
        "operationId": "duplicateItemType",
        "responses": {
          "200": {
            "description": "The model details",
            "schema": {
              "$ref": "#/definitions/ItemTypeResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "x-nullable": false,
          "description": "The project id",
          "name": "projectId",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "x-nullable": false,
          "description": "The model id",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/projects/{projectId}/item-types/{itemTypeId}/fields": {
      "get": {
        "tags": [
          "field"
        ],
        "summary": "Get the fields of the model",
        "operationId": "getFields",
        "responses": {
          "200": {
            "description": "Fields response",
            "schema": {
              "$ref": "#/definitions/FieldsResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "field"
        ],
        "summary": "Create a new field",
        "operationId": "createField",
        "parameters": [
          {
            "description": "The field details",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FieldRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/FieldResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "x-nullable": false,
          "description": "The project id",
          "name": "projectId",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "x-nullable": false,
          "description": "The item type id",
          "name": "itemTypeId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/projects/{projectId}/items": {
      "get": {
        "tags": [
          "item"
        ],
        "summary": "Get the items of the model",
        "operationId": "getItems",
        "parameters": [
          {
            "type": "array",
            "items": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            },
            "description": "IDs to include in the response",
            "name": "ids",
            "in": "query"
          },
          {
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "description": "The item-type id of the items",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The filter query",
            "name": "query",
            "in": "query"
          },
          {
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "description": "The page offset",
            "name": "offset",
            "in": "query"
          },
          {
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "description": "The limit count",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ItemsResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "item"
        ],
        "summary": "Create a new item",
        "operationId": "createItem",
        "parameters": [
          {
            "description": "The item details",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ItemRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ItemResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "x-nullable": false,
          "description": "The project id",
          "name": "projectId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/projects/{projectId}/items/{id}": {
      "get": {
        "tags": [
          "item"
        ],
        "summary": "Get a item",
        "operationId": "getItem",
        "responses": {
          "200": {
            "description": "The item details",
            "schema": {
              "$ref": "#/definitions/ItemResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "item"
        ],
        "summary": "Update a item",
        "operationId": "updateItem",
        "parameters": [
          {
            "description": "The item details",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ItemRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The item details",
            "schema": {
              "$ref": "#/definitions/ItemResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "item"
        ],
        "summary": "Delete a item",
        "operationId": "deleteItem",
        "responses": {
          "200": {
            "description": "The item details",
            "schema": {
              "$ref": "#/definitions/ItemResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "x-nullable": false,
          "description": "The project id",
          "name": "projectId",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "x-nullable": false,
          "description": "The item id",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/projects/{projectId}/roles": {
      "get": {
        "tags": [
          "role"
        ],
        "summary": "Get the roles of the model",
        "operationId": "getRoles",
        "responses": {
          "200": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/RolesResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "role"
        ],
        "summary": "Create a new role",
        "operationId": "createRole",
        "parameters": [
          {
            "description": "The role details",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RoleRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/RoleResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "x-nullable": false,
          "description": "The project id",
          "name": "projectId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/projects/{projectId}/roles/{id}": {
      "get": {
        "tags": [
          "role"
        ],
        "summary": "Get a role",
        "operationId": "getRole",
        "responses": {
          "200": {
            "description": "The role details",
            "schema": {
              "$ref": "#/definitions/RoleResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "role"
        ],
        "summary": "Update a role",
        "operationId": "updateRole",
        "parameters": [
          {
            "description": "The role details",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/RoleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The role details",
            "schema": {
              "$ref": "#/definitions/RoleResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "role"
        ],
        "summary": "Delete a role",
        "operationId": "deleteRole",
        "responses": {
          "200": {
            "description": "The role details",
            "schema": {
              "$ref": "#/definitions/RoleResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "x-nullable": false,
          "description": "The project id",
          "name": "projectId",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "x-nullable": false,
          "description": "The role id",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/projects/{projectId}/users": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get the users of the model",
        "operationId": "getUsers",
        "responses": {
          "200": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/UsersResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create a new user",
        "operationId": "createUser",
        "parameters": [
          {
            "description": "The user details",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "x-nullable": false,
          "description": "The project id",
          "name": "projectId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/projects/{projectId}/users/{id}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get a user",
        "operationId": "getUser",
        "responses": {
          "200": {
            "description": "The user details",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Update a user",
        "operationId": "updateUser",
        "parameters": [
          {
            "description": "The user details",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The user details",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete a user",
        "operationId": "deleteUser",
        "responses": {
          "200": {
            "description": "The user details",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "x-nullable": false,
          "description": "The project id",
          "name": "projectId",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "x-nullable": false,
          "description": "The user id",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/signin": {
      "post": {
        "tags": [
          "account"
        ],
        "operationId": "signin",
        "parameters": [
          {
            "description": "The account details",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/signinParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/signinOKBody"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/signup": {
      "post": {
        "tags": [
          "account"
        ],
        "operationId": "signup",
        "parameters": [
          {
            "description": "The account details",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/signupParamsBody"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/signupCreatedBody"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "EmailCredentials": {
      "type": "object",
      "required": [
        "type",
        "attributes"
      ],
      "properties": {
        "attributes": {
          "$ref": "#/definitions/emailCredentialsAttributes"
        },
        "type": {
          "type": "string",
          "enum": [
            "email_credentials"
          ],
          "x-nullable": false
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "error"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "x-nullable": false
        },
        "error": {
          "type": "string",
          "x-nullable": false
        }
      }
    },
    "Field": {
      "type": "object",
      "required": [
        "type",
        "attributes"
      ],
      "properties": {
        "attributes": {
          "$ref": "#/definitions/fieldAttributes"
        },
        "id": {
          "type": "string",
          "x-nullable": false,
          "readOnly": true
        },
        "relationships": {
          "$ref": "#/definitions/FieldRelationships"
        },
        "type": {
          "type": "string",
          "enum": [
            "field"
          ],
          "x-nullable": false
        }
      }
    },
    "FieldRelationships": {
      "type": "object",
      "properties": {
        "itemType": {
          "$ref": "#/definitions/fieldRelationshipsItemType"
        }
      }
    },
    "FieldRequest": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/Field"
        }
      }
    },
    "FieldResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Field"
        }
      }
    },
    "FieldsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Field"
          }
        }
      }
    },
    "Item": {
      "type": "object",
      "required": [
        "type",
        "attributes",
        "relationships"
      ],
      "properties": {
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "x-nullable": false
        },
        "id": {
          "type": "string",
          "x-nullable": false,
          "readOnly": true
        },
        "relationships": {
          "$ref": "#/definitions/ItemRelationships"
        },
        "type": {
          "type": "string",
          "enum": [
            "item"
          ],
          "x-nullable": false
        }
      }
    },
    "ItemRelationships": {
      "type": "object",
      "required": [
        "itemType"
      ],
      "properties": {
        "itemType": {
          "$ref": "#/definitions/itemRelationshipsItemType"
        },
        "lastEditor": {
          "$ref": "#/definitions/itemRelationshipsLastEditor"
        }
      }
    },
    "ItemRequest": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/Item"
        }
      }
    },
    "ItemResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Item"
        }
      }
    },
    "ItemType": {
      "type": "object",
      "required": [
        "type",
        "attributes"
      ],
      "properties": {
        "attributes": {
          "$ref": "#/definitions/itemTypeAttributes"
        },
        "id": {
          "type": "string",
          "x-nullable": false,
          "readOnly": true
        },
        "relationships": {
          "$ref": "#/definitions/ItemTypeRelationships"
        },
        "type": {
          "type": "string",
          "enum": [
            "item_type"
          ],
          "x-nullable": false
        }
      }
    },
    "ItemTypeIncluded": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Field"
      }
    },
    "ItemTypeRelationships": {
      "type": "object",
      "properties": {
        "fields": {
          "$ref": "#/definitions/itemTypeRelationshipsFields"
        },
        "orderingField": {
          "$ref": "#/definitions/itemTypeRelationshipsOrderingField"
        },
        "singletonItem": {
          "$ref": "#/definitions/itemTypeRelationshipsSingletonItem"
        }
      }
    },
    "ItemTypeRequest": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/ItemType"
        }
      }
    },
    "ItemTypeResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/ItemType"
        },
        "included": {
          "$ref": "#/definitions/ItemTypeIncluded"
        }
      }
    },
    "ItemTypesResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ItemType"
          }
        }
      }
    },
    "ItemsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Item"
          }
        },
        "meta": {
          "$ref": "#/definitions/ItemsResponseMeta"
        }
      }
    },
    "ItemsResponseMeta": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Project": {
      "type": "object",
      "required": [
        "type",
        "attributes"
      ],
      "properties": {
        "attributes": {
          "$ref": "#/definitions/projectAttributes"
        },
        "id": {
          "type": "string",
          "x-nullable": false,
          "readOnly": true
        },
        "relationships": {
          "$ref": "#/definitions/ProjectRelationships"
        },
        "type": {
          "type": "string",
          "enum": [
            "project"
          ],
          "x-nullable": false
        }
      }
    },
    "ProjectRelationships": {
      "type": "object",
      "properties": {
        "account": {
          "$ref": "#/definitions/projectRelationshipsAccount"
        }
      }
    },
    "ProjectRequest": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/Project"
        }
      }
    },
    "ProjectResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Project"
        }
      }
    },
    "ProjectsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Project"
          }
        }
      }
    },
    "Relationship": {
      "type": "object",
      "required": [
        "id",
        "type"
      ],
      "properties": {
        "id": {
          "type": "string",
          "x-nullable": false
        },
        "type": {
          "type": "string",
          "enum": [
            "account",
            "project",
            "role",
            "session",
            "item_type",
            "field",
            "item"
          ],
          "x-nullable": false
        }
      }
    },
    "Role": {
      "type": "object",
      "required": [
        "type",
        "attributes"
      ],
      "properties": {
        "attributes": {
          "$ref": "#/definitions/roleAttributes"
        },
        "id": {
          "type": "string",
          "x-nullable": false,
          "readOnly": true
        },
        "type": {
          "type": "string",
          "enum": [
            "role"
          ],
          "x-nullable": false
        }
      }
    },
    "RoleRequest": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/Role"
        }
      }
    },
    "RoleResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Role"
        }
      }
    },
    "RolesResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Role"
          }
        }
      }
    },
    "Session": {
      "type": "object",
      "required": [
        "id",
        "type",
        "relationships"
      ],
      "properties": {
        "id": {
          "type": "string",
          "x-nullable": false
        },
        "relationships": {
          "$ref": "#/definitions/SessionRelationships"
        },
        "type": {
          "type": "string",
          "enum": [
            "session"
          ],
          "x-nullable": false
        }
      }
    },
    "SessionRelationships": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/sessionRelationshipsUser"
        }
      }
    },
    "User": {
      "type": "object",
      "required": [
        "type",
        "attributes",
        "relationships"
      ],
      "properties": {
        "attributes": {
          "$ref": "#/definitions/userAttributes"
        },
        "id": {
          "type": "string",
          "x-nullable": false,
          "readOnly": true
        },
        "relationships": {
          "$ref": "#/definitions/UserRelationships"
        },
        "type": {
          "type": "string",
          "enum": [
            "user"
          ],
          "x-nullable": false
        }
      }
    },
    "UserRelationships": {
      "type": "object",
      "required": [
        "role"
      ],
      "properties": {
        "role": {
          "$ref": "#/definitions/userRelationshipsRole"
        }
      }
    },
    "UserRequest": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/User"
        }
      }
    },
    "UserResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/User"
        }
      }
    },
    "UsersResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User"
          }
        }
      }
    },
    "emailCredentialsAttributes": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "format": "email",
          "x-nullable": false
        },
        "password": {
          "type": "string",
          "format": "password",
          "maxLength": 32,
          "minLength": 8,
          "x-nullable": false
        }
      },
      "x-go-gen-location": "models",
      "x-nullable": false
    },
    "fieldAttributes": {
      "type": "object",
      "required": [
        "label",
        "apiKey",
        "fieldType",
        "appearance",
        "validators"
      ],
      "properties": {
        "apiKey": {
          "type": "string",
          "maxLength": 32,
          "minLength": 1,
          "x-nullable": false
        },
        "appearance": {
          "$ref": "#/definitions/fieldAttributesAppearance"
        },
        "fieldType": {
          "type": "string",
          "enum": [
            "string"
          ],
          "x-nullable": false
        },
        "hint": {
          "type": "string",
          "x-nullable": false
        },
        "label": {
          "type": "string",
          "x-nullable": false
        },
        "localized": {
          "type": "boolean",
          "x-nullable": false
        },
        "position": {
          "type": "integer",
          "format": "int32",
          "x-nullable": false
        },
        "validators": {
          "$ref": "#/definitions/fieldAttributesValidators"
        }
      },
      "x-go-gen-location": "models"
    },
    "fieldAttributesAppearance": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "title",
            "plain",
            "markdown"
          ],
          "x-nullable": false
        }
      },
      "x-go-gen-location": "models",
      "x-nullable": false
    },
    "fieldAttributesValidators": {
      "type": "object",
      "properties": {
        "enum": {
          "$ref": "#/definitions/fieldAttributesValidatorsEnum"
        },
        "format": {
          "$ref": "#/definitions/fieldAttributesValidatorsFormat"
        },
        "length": {
          "$ref": "#/definitions/fieldAttributesValidatorsLength"
        },
        "required": {
          "type": "object"
        },
        "unique": {
          "type": "object"
        }
      },
      "x-go-gen-location": "models",
      "x-nullable": false
    },
    "fieldAttributesValidatorsEnum": {
      "type": "object",
      "required": [
        "values"
      ],
      "properties": {
        "values": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-gen-location": "models"
    },
    "fieldAttributesValidatorsFormat": {
      "type": "object",
      "properties": {
        "customPattern": {
          "type": "string",
          "x-nullable": true
        },
        "predefinedPattern": {
          "type": "string",
          "enum": [
            "url",
            "email"
          ],
          "x-nullable": true
        }
      },
      "x-go-gen-location": "models"
    },
    "fieldAttributesValidatorsLength": {
      "type": "object",
      "properties": {
        "eq": {
          "type": "string",
          "x-nullable": true
        },
        "max": {
          "type": "string",
          "x-nullable": true
        },
        "min": {
          "type": "string",
          "x-nullable": true
        }
      },
      "x-go-gen-location": "models"
    },
    "fieldRelationshipsItemType": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Relationship"
        }
      },
      "x-go-gen-location": "models"
    },
    "itemRelationshipsItemType": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/Relationship"
        }
      },
      "x-go-gen-location": "models"
    },
    "itemRelationshipsLastEditor": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Relationship"
        }
      },
      "x-go-gen-location": "models"
    },
    "itemTypeAttributes": {
      "type": "object",
      "required": [
        "apiKey"
      ],
      "properties": {
        "apiKey": {
          "type": "string",
          "maxLength": 32,
          "minLength": 1,
          "x-nullable": false
        },
        "name": {
          "type": "string",
          "x-nullable": false
        }
      },
      "x-go-gen-location": "models"
    },
    "itemTypeRelationshipsFields": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Relationship"
          }
        }
      },
      "x-go-gen-location": "models"
    },
    "itemTypeRelationshipsOrderingField": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Relationship"
        }
      },
      "x-go-gen-location": "models"
    },
    "itemTypeRelationshipsSingletonItem": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Relationship"
        }
      },
      "x-go-gen-location": "models"
    },
    "projectAttributes": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "x-nullable": false
        }
      },
      "x-go-gen-location": "models"
    },
    "projectRelationshipsAccount": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Relationship"
        }
      },
      "x-go-gen-location": "models"
    },
    "roleAttributes": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "canEditProject": {
          "type": "boolean",
          "x-nullable": false
        },
        "canEditSchema": {
          "type": "boolean",
          "x-nullable": false
        },
        "canManageAccessTokens": {
          "type": "boolean",
          "x-nullable": false
        },
        "canManageUsers": {
          "type": "boolean",
          "x-nullable": false
        },
        "canPublishContent": {
          "type": "boolean",
          "x-nullable": false
        },
        "name": {
          "type": "string",
          "x-nullable": false
        }
      },
      "x-go-gen-location": "models",
      "x-nullable": false
    },
    "sessionRelationshipsUser": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Relationship"
        }
      },
      "x-go-gen-location": "models"
    },
    "signinOKBody": {
      "properties": {
        "data": {
          "$ref": "#/definitions/Session"
        }
      },
      "x-go-gen-location": "operations"
    },
    "signinParamsBody": {
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/EmailCredentials"
        }
      },
      "x-go-gen-location": "operations"
    },
    "signupCreatedBody": {
      "properties": {
        "data": {
          "$ref": "#/definitions/Session"
        }
      },
      "x-go-gen-location": "operations"
    },
    "signupParamsBody": {
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/EmailCredentials"
        }
      },
      "x-go-gen-location": "operations"
    },
    "userAttributes": {
      "type": "object",
      "required": [
        "email"
      ],
      "properties": {
        "email": {
          "type": "string",
          "format": "email",
          "x-nullable": false
        },
        "state": {
          "type": "string",
          "enum": [
            "registered",
            "invitation_pending"
          ]
        }
      },
      "x-go-gen-location": "models"
    },
    "userRelationshipsRole": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/Relationship"
        }
      },
      "x-go-gen-location": "models"
    }
  },
  "tags": [
    {
      "description": "Operations about account",
      "name": "account"
    },
    {
      "description": "Operations about user roles",
      "name": "role"
    },
    {
      "description": "Operations about users",
      "name": "user"
    },
    {
      "description": "Operations about projects",
      "name": "project"
    },
    {
      "description": "Operations about item types",
      "name": "item-type"
    },
    {
      "description": "Operations about item-type fields",
      "name": "field"
    }
  ]
}`))
}
